{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hook/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,gCACE,4BAAID,IACJ,sBAAME,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOd,SACE,uBACIO,KAAK,OACLC,MAAOT,EACPU,YAAc,sBACdC,SArBgB,SAACR,GACzBF,EAAcE,EAAES,OAAOH,gB,+BCNdI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAEyBC,UAAUH,GAFnC,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECJwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAKGqB,EDnB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEjBzBgB,EAAe,WAExB,MAAoC1C,mBAAU,CAAC,SAA/C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAGA,OACI,gCACI,oBAAIgC,UAAU,QAAd,sBACA,uBACA,cAAC,EAAD,CAAahC,cAAeA,IAC5B,6BAEQ4C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCbjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2ae96452.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n\n  const [inputValue, setinputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setinputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n\n      if(inputValue.trim().length > 2){\n      setCategories(cats => [inputValue, ...cats] );\n      setinputValue('');\n      }\n  };\n\n  return (\n    <div>\n      <p>{inputValue}</p>\n      <form onSubmit={handleSubmit}> \n        <input \n            type=\"text\" \n            value={inputValue} \n            placeholder = \"Haz una bÃºsqueda\"\n            onChange={handleInputChange} />\n\n      </form>\n    </div>\n  );\n};\n\nAddCategory.propTypes = {\n  \n  setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async (category) => {\n    const url =\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=12&api_key=jKDuWlsL39ozi9o3KG7MoyQaAQxKPeUJ`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url,\n      };\n    });\n    \n    return(gifs);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport const GifGridItem = ({title, url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nGifGridItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport { useFetchGifs } from '../hook/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"card-grid\">\n                \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            \n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n    category : PropTypes.string.isRequired\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n                \n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category])\n\n\n\n\n    return state;\n\n\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState( ['Gifs'])\n    \n    \n    return (\n        <div>\n            <h2 className=\"title\">Gifs App</h2>\n            <hr/>\n            <AddCategory setCategories={setCategories} />\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid \n                            key={category}\n                            category={category} />\n                    ))\n                }\n            </ol>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}